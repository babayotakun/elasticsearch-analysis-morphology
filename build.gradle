/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


buildscript {
    repositories {
        mavenCentral()
        maven {
            name 'sonatype-snapshots'
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        jcenter()
    }
    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:7.10.0"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7"
    }
}

apply plugin: 'idea'
apply plugin:'java'
apply plugin: 'eclipse'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'com.jfrog.bintray'

repositories {
    maven {
        name 'bintray-babayotakun-russianmorphology'
        url "https://dl.bintray.com/babayotakun/russianmorphology"
    }
}

version = '7.10.0'

esplugin {
    description 'English and Russian Morphology for ElasticSearch.'
    classname 'org.elasticsearch.plugin.analysis.morphology.AnalysisMorphologyPlugin'
    name 'analysis-morphology'
}
esplugin.version = version
validateNebulaPom.enabled = false


dependencies {
    compile "org.apache.lucene.morphology:russian:1-lucene8.7.0"
    compile "org.apache.lucene.morphology:english:1-lucene8.7.0"
    compile "org.apache.lucene.morphology:morph:1-lucene8.7.0"
}

bintray {
    user = ''
    key = ''
    pkg {
        repo = 'elasticsearch-russian-morphology'
        name = 'morphology'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/babayotakun/elasticsearch-analysis-morphology'
    }
}

project.licenseFile = project.rootProject.file('LICENSE.txt')
project.noticeFile = project.rootProject.file('NOTICE.txt')

